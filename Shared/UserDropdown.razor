@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="user-dropdown ms-auto">
    <div class="dropdown">
        <button class="btn btn-light dropdown-toggle d-flex align-items-center" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="bi bi-person-circle me-2"></i>
            <span>@(_userName ?? "Usuario")</span>
        </button>
        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
            <li class="dropdown-item-text">
                <small class="text-muted">@(_userRole ?? "")</small>
            </li>
            <li><hr class="dropdown-divider"></li>
            <li><a class="dropdown-item" href="/auth/profile"><i class="bi bi-person me-2"></i>Mi Perfil</a></li>
            <li><a class="dropdown-item text-danger" href="javascript:void(0)" @onclick="Logout"><i class="bi bi-box-arrow-right me-2"></i>Cerrar Sesión</a></li>
        </ul>
    </div>
</div>

@code {
    private string? _userName;
    private string? _userRole;

    protected override void OnInitialized()
    {
        var currentUser = AuthService.GetCurrentUser();
        if (currentUser != null)
        {
            _userName = $"{currentUser.Nombre}";
            _userRole = currentUser.Rol;
        }
    }

    private async Task Logout()
    {
        var result = await AuthService.Logout();
        if (result.Success)
        {
            NavigationManager.NavigateTo("/login", true);
        }
    }
}
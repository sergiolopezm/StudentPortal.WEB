@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (context.User.Identity?.IsAuthenticated != true)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <div class="container mt-5">
                            <div class="alert alert-danger">
                                <h4 class="alert-heading">Acceso Denegado</h4>
                                <p>No tiene permisos para acceder a esta página.</p>
                            </div>
                            <a href="/" class="btn btn-primary">Volver al Inicio</a>
                        </div>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>No Encontrado</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <div class="container mt-5 text-center">
                    <h1 class="display-4">404 - Página No Encontrada</h1>
                    <p class="lead">Lo sentimos, la página que busca no existe.</p>
                    <a href="/" class="btn btn-primary">Volver al Inicio</a>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private class RedirectToLogin : ComponentBase
    {
        [Inject]
        private NavigationManager NavigationManager { get; set; } = null!;

        protected override void OnInitialized()
        {
            NavigationManager.NavigateTo("/login", true);
        }
    }
}